// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eBook.Data;

#nullable disable

namespace eBook.Migrations
{
    [DbContext(typeof(BookContext))]
    [Migration("20220401160038_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.3");

            modelBuilder.Entity("eBook.Models.Author", b =>
                {
                    b.Property<int>("IdAuthor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AuthorName")
                        .HasColumnType("TEXT");

                    b.HasKey("IdAuthor");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("eBook.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AuthorsIdAuthor")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("UrlFile")
                        .HasColumnType("TEXT");

                    b.Property<string>("UrlPicture")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AuthorsIdAuthor");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("eBook.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AuthorIdAuthor")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BookId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GenreName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AuthorIdAuthor");

                    b.HasIndex("BookId");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("eBook.Models.Book", b =>
                {
                    b.HasOne("eBook.Models.Author", "Authors")
                        .WithMany("Books")
                        .HasForeignKey("AuthorsIdAuthor");

                    b.Navigation("Authors");
                });

            modelBuilder.Entity("eBook.Models.Genre", b =>
                {
                    b.HasOne("eBook.Models.Author", null)
                        .WithMany("Genres")
                        .HasForeignKey("AuthorIdAuthor");

                    b.HasOne("eBook.Models.Book", null)
                        .WithMany("Genres")
                        .HasForeignKey("BookId");
                });

            modelBuilder.Entity("eBook.Models.Author", b =>
                {
                    b.Navigation("Books");

                    b.Navigation("Genres");
                });

            modelBuilder.Entity("eBook.Models.Book", b =>
                {
                    b.Navigation("Genres");
                });
#pragma warning restore 612, 618
        }
    }
}
